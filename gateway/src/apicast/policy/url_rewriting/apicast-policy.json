{
  "$schema": "http://apicast.io/policy-v1.1/schema#manifest#",
  "name": "URL Rewriting",
  "summary": "Allows to modify the path of a request.",
  "description":
    ["This policy allows to modify the path of a request. ",
     "The operations supported are sub and gsub based on ngx.re.sub and ",
     "ngx.re.gsub provided by OpenResty. Please check ",
     "https://github.com/openresty/lua-nginx-module for more details on how ",
     "to define regular expressions and learn the options supported. \n",
     "When combined with the APIcast policy, if the URL rewriting policy is ",
     "placed before it in the chain, the APIcast mapping rules will apply to the ",
     "modified path. If the URL rewriting policy is placed after APIcast in the ",
     "chain, then the mapping rules will apply to the original path."],
  "version": "builtin",
  "configuration": {
    "definitions": {
      "methods": {
        "description": "Array of HTTP methods this rule must be applied to. If left blank it will be applied to all HTTP methods",
        "$id": "#/definitions/methods",
        "type": "array",
        "items": {
          "type": "string",
          "oneOf": [
            {
              "enum": [
                "GET"
              ],
              "title": "GET"
            },
            {
              "enum": [
                "POST"
              ],
              "title": "POST"
            },
            {
              "enum": [
                "PUT"
              ],
              "title": "PUT"
            },
            {
              "enum": [
                "PATCH"
              ],
              "title": "PATCH"
            },
            {
              "enum": [
                "DELETE"
              ],
              "title": "DELETE"
            },
            {
              "enum": [
                "HEAD"
              ],
              "title": "HEAD"
            },
            {
              "enum": [
                "OPTIONS"
              ],
              "title": "OPTIONS"
            }
          ]
        }
      }
    },
    "type": "object",
    "properties": {
      "commands": {
        "description": "List of rewriting commands to be applied",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "description": "Operation to be applied (sub or gsub)",
              "type": "string",
              "oneOf": [
                {
                  "enum": [
                    "sub"
                  ],
                  "title": "Substitute the first match of the regex applied."
                },
                {
                  "enum": [
                    "gsub"
                  ],
                  "title": "Substitute all the matches of the regex applied."
                }
              ]
            },
            "regex": {
              "description": "Regular expression to be matched",
              "type": "string"
            },
            "replace": {
              "description": "String that will replace what is matched by the regex",
              "type": "string"
            },
            "options": {
              "description": "Options that define how the regex matching is performed",
              "type": "string"
            },
            "break": {
              "description": "when set to true, if the command rewrote the URL, it will be the last one applied",
              "type": "boolean"
            },
            "methods": {
              "$ref": "#/definitions/methods"
            }
          },
          "required": [
            "op",
            "regex",
            "replace"
          ]
        }
      },
      "query_args_commands": {
        "description": "List of commands to apply to the query string args",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "op": {
              "description": "Operation to apply to the query argument",
              "type": "string",
              "oneOf": [
                {
                  "enum": [
                    "add"
                  ],
                  "title": "Add a value to an existing argument"
                },
                {
                  "enum": [
                    "set"
                  ],
                  "title": "Create the arg when not set, replace its value when set"
                },
                {
                  "enum": [
                    "push"
                  ],
                  "title": "Create the arg when not set, add the value when set"
                },
                {
                  "enum": [
                    "delete"
                  ],
                  "title": "Delete an arg"
                }
              ]
            },
            "arg": {
              "description": "Query argument",
              "type": "string"
            },
            "value": {
              "description": "Value",
              "type": "string"
            },
            "value_type": {
              "description": "How to evaluate 'value'",
              "type": "string",
              "oneOf": [
                {
                  "enum": [
                    "plain"
                  ],
                  "title": "Evaluate 'value' as plain text."
                },
                {
                  "enum": [
                    "liquid"
                  ],
                  "title": "Evaluate 'value' as liquid."
                }
              ],
              "default": "plain"
            },
            "methods": {
              "description": "Array of HTTP methods this rule must be applied to. If left blank it will be applied to all HTTP methods",
              "$ref": "#/definitions/methods"
            }
          },
          "required": [
            "op",
            "arg"
          ]
        }
      }
    }
  }
}
